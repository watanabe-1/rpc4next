name: Bun test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  bun-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        bun-version: ["1.1.0", "tool-versions"]
        next-version: ["14.0.0", "15.0.0", "from-package"]

    steps:
      - uses: actions/checkout@v4

      - name: Determine Bun version
        id: bun-version
        run: |
          if [ "${{ matrix.bun-version }}" = "tool-versions" ]; then
            version=$(grep '^bun ' .tool-versions | awk '{print $2}')
          else
            version="${{ matrix.bun-version }}"
          fi
          echo "Resolved Bun version: $version"
          echo "version=$version" >> "$GITHUB_OUTPUT"

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: "${{ steps.bun-version.outputs.version }}"

      - name: Install base dependencies
        run: |
          if [ "${{ matrix.bun-version }}" = "tool-versions" ]; then
            bun install --frozen-lockfile
          else
            bun install
          fi

      - name: Set Next.js version
        run: |
          if [ "${{ matrix.next-version }}" = "from-package" ]; then
            echo "Using next from package.json"
          else
            echo "Overwriting package.json to use next@${{ matrix.next-version }}"
            rm -f bun.lockb bun.lock
            bun add "next@${{ matrix.next-version }}"
          fi

      - name: Print versions
        run: |
          bun -v
          bunx next --version

      - name: Lint
        run: bun run lint

      - name: Build
        run: bun run build:bun

      - name: Test
        run: bun run test
