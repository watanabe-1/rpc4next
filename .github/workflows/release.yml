name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      - name: Setup Git user
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"

      - name: Extract version from tag
        id: extract_version
        run: |
          echo "version=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"

      - name: Get default branch
        id: default_branch
        run: |
          branch=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
          echo "branch=$branch" >> "$GITHUB_OUTPUT"

      - name: Checkout to default branch
        run: git checkout ${{ steps.default_branch.outputs.branch }}

      - name: Update package.json version
        run: npm version ${{ steps.extract_version.outputs.version }} --no-git-tag-version

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Commit and push updated version
        run: |
          git add package.json package-lock.json
          git commit -m "chore: bump version to v${{ steps.extract_version.outputs.version }}" || echo "No changes to commit"
          git push origin HEAD:refs/heads/${{ steps.default_branch.outputs.branch }}

      - name: Generate changelog
        id: changelog
        run: |
          echo "changelog<<EOF" >> "$GITHUB_OUTPUT"
          git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"- %s" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
